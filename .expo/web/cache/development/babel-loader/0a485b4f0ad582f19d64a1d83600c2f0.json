{"ast":null,"code":"import { NativeBaseProvider, Center, HStack, Button, Text } from \"native-base\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCounter } from \"../redux/counterSlice\";\nimport { selectCounter } from \"../redux/counterSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen() {\n  var counterValue = useSelector(selectCounter);\n  var dispatch = useDispatch();\n  return _jsx(NativeBaseProvider, {\n    children: _jsxs(Center, {\n      flex: 1,\n      bg: \"white\",\n      children: [_jsxs(HStack, {\n        space: 20,\n        children: [_jsx(Button, {\n          borderRadius: 0,\n          width: 70,\n          onPress: function onPress() {\n            return dispatch(increaseOne(counterValue + 1));\n          },\n          children: _jsx(Text, {\n            fontSize: 40,\n            color: \"white\",\n            children: \"+\"\n          })\n        }), _jsx(Button, {\n          borderRadius: 0,\n          width: 70,\n          onPress: function onPress() {\n            return dispatch(increaseOne(counterValue - 1));\n          },\n          children: _jsx(Text, {\n            fontSize: 40,\n            color: \"white\",\n            children: \"-\"\n          })\n        })]\n      }), _jsx(Text, {\n        fontSize: 40,\n        mt: 20,\n        color: \"black\",\n        children: counterValue\n      })]\n    })\n  });\n};\n\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/fangyan/Documents/110-2/行動程式設計/作業/wk10_hw/src/screens/HomeScreen.js"],"names":["NativeBaseProvider","Center","HStack","Button","Text","useDispatch","useSelector","setCounter","selectCounter","HomeScreen","counterValue","dispatch","increaseOne"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,MAA7B,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqDC,IAArD,QAAiE,aAAjE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT;AACA,SAASC,aAAT;;;;AAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAEtB,MAAMC,YAAY,GAAGJ,WAAW,CAACE,aAAD,CAAhC;AAGA,MAAMG,QAAQ,GAAGN,WAAW,EAA5B;AAEA,SACE,KAAC,kBAAD;AAAA,cACE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,CAAd;AAAiB,MAAA,EAAE,EAAE,OAArB;AAAA,iBACE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,EAAf;AAAA,mBACE,KAAC,MAAD;AAAQ,UAAA,YAAY,EAAE,CAAtB;AAAyB,UAAA,KAAK,EAAE,EAAhC;AAAoC,UAAA,OAAO,EAAE;AAAA,mBAAMM,QAAQ,CAACC,WAAW,CAACF,YAAY,GAAG,CAAhB,CAAZ,CAAd;AAAA,WAA7C;AAAA,oBACE,KAAC,IAAD;AAAM,YAAA,QAAQ,EAAE,EAAhB;AAAoB,YAAA,KAAK,EAAC,OAA1B;AAAA;AAAA;AADF,UADF,EAIE,KAAC,MAAD;AAAQ,UAAA,YAAY,EAAE,CAAtB;AAAyB,UAAA,KAAK,EAAE,EAAhC;AAAoC,UAAA,OAAO,EAAE;AAAA,mBAAMC,QAAQ,CAACC,WAAW,CAACF,YAAY,GAAG,CAAhB,CAAZ,CAAd;AAAA,WAA7C;AAAA,oBACE,KAAC,IAAD;AAAM,YAAA,QAAQ,EAAE,EAAhB;AAAoB,YAAA,KAAK,EAAC,OAA1B;AAAA;AAAA;AADF,UAJF;AAAA,QADF,EASE,KAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,EAAhB;AAAoB,QAAA,EAAE,EAAE,EAAxB;AAA4B,QAAA,KAAK,EAAE,OAAnC;AAAA,kBACGA;AADH,QATF;AAAA;AADF,IADF;AAiBD,CAxBF;;AA0BC,eAAeD,UAAf","sourcesContent":["import { NativeBaseProvider, Center, HStack, Button, Text } from \"native-base\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCounter } from \"../redux/counterSlice\";\nimport { selectCounter } from \"../redux/counterSlice\";\n\n// Then, you can use the redux state management:\n// get states by useSelector\n// send actions by useDispatch\nconst HomeScreen = () => {\n   // Get states from store\n   const counterValue = useSelector(selectCounter);\n \n   // Define a dispatch to send actions\n   const dispatch = useDispatch();\n \n   return (\n     <NativeBaseProvider>\n       <Center flex={1} bg={\"white\"}>\n         <HStack space={20}>\n           <Button borderRadius={0} width={70} onPress={() => dispatch(increaseOne(counterValue + 1))}>\n             <Text fontSize={40} color=\"white\">+</Text>\n           </Button>\n           <Button borderRadius={0} width={70} onPress={() => dispatch(increaseOne(counterValue - 1))}>\n             <Text fontSize={40} color=\"white\">-</Text>\n           </Button>\n         </HStack>\n         <Text fontSize={40} mt={20} color={\"black\"}>\n           {counterValue}\n         </Text>\n       </Center>\n     </NativeBaseProvider>\n   );\n }\n\n export default HomeScreen;"]},"metadata":{},"sourceType":"module"}