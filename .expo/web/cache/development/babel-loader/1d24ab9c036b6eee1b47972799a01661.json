{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  counterValue: 0\n};\nvar counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increaseOne: function increaseOne(state, action) {\n      state.counterValue = action.payload;\n    },\n    decreaseOne: function decreaseOne(state, action) {\n      state.counterValue = action.payload;\n    }\n  }\n});\nexport var selectCounter = function selectCounter(state) {\n  return state.counter.counterValue;\n};\nvar increaseOne = counterSlice.actions.increaseOne;\nexport { increaseOne };\nvar decreaseOne = counterSlice.actions.decreaseOne;\nexport { decreaseOne };\nexport default counterSlice.reducer;","map":{"version":3,"sources":["/Users/fangyan/Documents/110-2/行動程式設計/作業/wk10_hw/src/redux/counterSlice.js"],"names":["createSlice","initialState","counterValue","counterSlice","name","reducers","increaseOne","state","action","payload","decreaseOne","selectCounter","counter","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAIA,IAAMC,YAAY,GAAG;AAAEC,EAAAA,YAAY,EAAE;AAAhB,CAArB;AAEA,IAAMC,YAAY,GAAGH,WAAW,CAAC;AAC/BI,EAAAA,IAAI,EAAE,SADyB;AAE/BH,EAAAA,YAAY,EAAZA,YAF+B;AAG/BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,qBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC9BD,MAAAA,KAAK,CAACL,YAAN,GAAqBM,MAAM,CAACC,OAA5B;AACD,KAHO;AAIRC,IAAAA,WAAW,EAAE,qBAACH,KAAD,EAAQC,MAAR,EAAmB;AAC9BD,MAAAA,KAAK,CAACL,YAAN,GAAqBM,MAAM,CAACC,OAA5B;AACD;AANO;AAHqB,CAAD,CAAhC;AAcA,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACJ,KAAD;AAAA,SAAWA,KAAK,CAACK,OAAN,CAAcV,YAAzB;AAAA,CAAtB;AAGA,IAAQI,WAAR,GAAwBH,YAAY,CAACU,OAArC,CAAQP,WAAR;;AACA,IAAQI,WAAR,GAAwBP,YAAY,CAACU,OAArC,CAAQH,WAAR;;AAGP,eAAeP,YAAY,CAACW,OAA5B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\n// Part1: Define Slice (including reducers and actions)\nconst initialState = { counterValue: 0 };\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increaseOne: (state, action) => {\n      state.counterValue = action.payload;\n    },\n    decreaseOne: (state, action) => {\n      state.counterValue = action.payload;\n    },\n  },\n});\n\n// export state to global\nexport const selectCounter = (state) => state.counter.counterValue;\n\n// export actions to global\nexport const { increaseOne } = counterSlice.actions;\nexport const { decreaseOne } = counterSlice.actions;\n\n// export reducer to global\nexport default counterSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}